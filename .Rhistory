# stagger numbering like the lines
geom_text(data=bins2 %>% dplyr::filter(row_number() %% 2 == 0),
aes(x = (start+stop)/2, y = 2.1, label = number))+
geom_text(data=bins2 %>% dplyr::filter(row_number() %% 2 == 1),
aes(x = (start+stop)/2, y = 1.9, label = number))+
scale_x_reverse(limits = c(10,0))+
xlab("shift, ppm")+
ylab("intensity")+
theme_classic() %+replace%
theme(legend.position = "right",
legend.key=element_blank(),
legend.title = element_blank(),
legend.text = element_text(size = 12),
legend.key.size = unit(1.5, 'lines'),
panel.border = element_rect(color="black",size=1.5, fill = NA),
plot.title = element_text(hjust = 0.05, size = 14),
axis.text = element_text(size = 14, color = "black"),
axis.title = element_text(size = 14, face = "bold", color = "black"),
# formatting for facets
panel.background = element_blank(),
strip.background = element_rect(colour="white", fill="white"), #facet formatting
panel.spacing.x = unit(1.5, "lines"), #facet spacing for x axis
panel.spacing.y = unit(1.5, "lines"), #facet spacing for x axis
strip.text.x = element_text(size=12, face="bold"), #facet labels
strip.text.y = element_text(size=12, face="bold", angle = 270) #facet labels
)
source('~/OneDrive - PNNL/Documents/GitHub/nmr_processing/1-processing.R', echo=TRUE)
# PART II. SETTING UP THE SPECTRA ----
## 1. spectra with banded regions ----
gg_nmr1 =
ggplot()+
geom_rect(data=bins2, aes(xmin=start, xmax=stop, ymin=-Inf, ymax=+Inf, fill=reorder(group, start)), color = "grey", alpha=0.2)+
scale_x_reverse(limits = c(10,0))+
xlab("shift, ppm")+
ylab("intensity")+
# labels:
annotate("text", label = "aliphatic", x = 1.4, y = -0.1)+
annotate("text", label = "O-alkyl", x = 3.5, y = -0.1)+
annotate("text", label = "alpha-H", x = 4.45, y = -0.1)+
annotate("text", label = "aromatic", x = 7, y = -0.1)+
annotate("text", label = "amide", x = 8.1, y = -0.1)+
annotate("text", label = "\n\nWATER", x = 3.5, y = Inf)+
annotate("text", label = "\n\nDMSO", x = 2.48, y = Inf)+
geom_vline(xintercept = WATER_start, linetype="longdash")+
geom_vline(xintercept = WATER_stop, linetype="longdash")+
geom_vline(xintercept = DMSO_start, linetype="dashed")+
geom_vline(xintercept = DMSO_stop, linetype="dashed")+
theme_classic() %+replace%
theme(legend.position = "right",
legend.key=element_blank(),
legend.title = element_blank(),
legend.text = element_text(size = 12),
legend.key.size = unit(1.5, 'lines'),
panel.border = element_rect(color="black",size=1.5, fill = NA),
plot.title = element_text(hjust = 0.05, size = 14),
axis.text = element_text(size = 14, color = "black"),
axis.title = element_text(size = 14, face = "bold", color = "black"),
# formatting for facets
panel.background = element_blank(),
strip.background = element_rect(colour="white", fill="white"), #facet formatting
panel.spacing.x = unit(1.5, "lines"), #facet spacing for x axis
panel.spacing.y = unit(1.5, "lines"), #facet spacing for x axis
strip.text.x = element_text(size=12, face="bold"), #facet labels
strip.text.y = element_text(size=12, face="bold", angle = 270) #facet labels
)
# PART III. PLOT THE SPECTRA ----
## using gg_nmr1
gg_nmr1+
geom_path(data = spectra2, aes(x = ppm, y = intensity, color = source))+
ylim(0,3)
ggsave("images/spectra_1.png", width = 10, height = 4)
source('~/OneDrive - PNNL/Documents/GitHub/nmr_processing/2a-processing_peaks.R', echo=TRUE)
source('~/OneDrive - PNNL/Documents/GitHub/nmr_processing/2a-processing_peaks.R', echo=TRUE)
source('~/OneDrive - PNNL/Documents/GitHub/nmr_processing/2a-processing_peaks.R', echo=TRUE)
View(peaks)
View(peaks)
#
# PART II. SET FILE PATHS ----
SPECTRA_FILES = "data/spectra/"
PEAKS_FILES = "data/peaks/"
## 1. import and process NMR peak data ----
filePaths <- list.files(path = PEAKS_FILES,pattern = "*.csv", full.names = TRUE)
# rbind.fill binds all rows and fills in missing columns
spectra_temp1 <- do.call(rbind.fill, lapply(filePaths, function(path) {
# the files are tab-delimited, so read.csv will not work. import using read.table
# there is no header. so create new column names
# then add a new column `source` to denote the file name
df <- fread(path, header=TRUE)
df[["source"]] <- rep(path, nrow(df))
df}))
View(spectra_temp1)
PROCESSED_PEAKS = "data/processed/peaks/csv"
View(peaks)
COREKEY = "data/corekey.csv"
source("0-nmr_setup.R")
source("0-nmr_setup.R")
# I. LOAD FILES
peaks = read.csv(PROCESSED_PEAKS)
source('~/OneDrive - PNNL/Documents/GitHub/nmr_processing/2a-processing_peaks.R', echo=TRUE)
source('~/OneDrive - PNNL/Documents/GitHub/nmr_processing/2b-relabund.R', echo=TRUE)
source("0-nmr_setup.R")
# I. LOAD FILES
peaks = read.csv(PROCESSED_PEAKS)
PROCESSED_PEAKS = "processed/peaks.csv"
source("0-nmr_setup.R")
# I. LOAD FILES
peaks = read.csv(PROCESSED_PEAKS)
source('~/OneDrive - PNNL/Documents/GitHub/nmr_processing/2a-processing_peaks.R', echo=TRUE)
source('~/OneDrive - PNNL/Documents/GitHub/nmr_processing/2a-processing_peaks.R', echo=TRUE)
source("0-nmr_setup.R")
# I. LOAD FILES
peaks = read.csv(PROCESSED_PEAKS)
corekey = read.csv(COREKEY)
peaks2 =
peaks %>%
right_join(corekey, by = "Core")
# I. LOAD FILES
peaks = read.csv(PROCESSED_PEAKS)
corekey = read.csv(COREKEY) %>% dplyr::mutate(Core = as.character(Core))
peaks2 =
peaks %>%
right_join(corekey, by = "Core")
# I. LOAD FILES
peaks = read.csv(PROCESSED_PEAKS, stringsAsFactors = F)
corekey = read.csv(COREKEY) %>% dplyr::mutate(Core = as.character(Core))
peaks2 =
peaks %>%
right_join(corekey, by = "Core")
source("0-nmr_setup.R")
# II. ----
rel_abund =
subset(merge(peaks2, bins2), start <= ppm & ppm <= stop) %>%
#dplyr::select(source,ppm, Area, group) %>%
#filter(!(ppm>DMSO_start&ppm<DMSO_stop)) %>%
group_by(Core, group, treatment, sat_level, perc_sat, texture, soil_type) %>%
dplyr::summarize(area = sum(Area)) %>%
group_by(Core) %>%
dplyr::mutate(total = sum(area),
relabund = round((area/total)*100,2))
# II. ----
rel_abund =
subset(merge(peaks2, bins2), start <= ppm & ppm <= stop) %>%
#dplyr::select(source,ppm, Area, group) %>%
#filter(!(ppm>DMSO_start&ppm<DMSO_stop)) %>%
group_by(Core, group) %>%
dplyr::summarize(area = sum(Area)) %>%
group_by(Core) %>%
dplyr::mutate(total = sum(area),
relabund = round((area/total)*100,2))
View(rel_abund)
rel_abund =
subset(merge(peaks2, bins2), start <= ppm & ppm <= stop)
View(peaks2)
peaks2 =
peaks %>%
left_join(corekey, by = "Core")
# II. ----
rel_abund =
subset(merge(peaks2, bins2), start <= ppm & ppm <= stop) %>%
#dplyr::select(source,ppm, Area, group) %>%
#filter(!(ppm>DMSO_start&ppm<DMSO_stop)) %>%
group_by(Core, group) %>%
dplyr::summarize(area = sum(Area)) %>%
group_by(Core) %>%
dplyr::mutate(total = sum(area),
relabund = round((area/total)*100,2))
View(rel_abund)
View(corekey)
View(peaks)
# now, clean up
peaks =
merged %>%
# keep only 0-10 ppm
filter(ppm>=0&ppm<=10) %>%
# remove solvent regions
filter(!(ppm>DMSO_start & ppm<DMSO_stop)) %>%
filter(!is.na(ppm)) %>%
# remove peaks with 0 intensity, and peaks flagged as weak
filter(Intensity > 0) %>%
filter(!Flags=="Weak") %>%
# the source column has the entire path, including directories
# delete the unnecessary strings
dplyr::mutate(Source = str_replace_all(Source,"data/nmr_peaks//",""),
Source = str_replace_all(Source,".csv","")) %>%
dplyr::rename(Core = Source)
View(peaks)
merged =
cbind(spectra_Source, spectra_ppm, spectra_Intensity, spectra_Width,spectra_Area, spectra_Flags)
# now, clean up
peaks =
merged %>%
# keep only 0-10 ppm
filter(ppm>=0&ppm<=10) %>%
# remove solvent regions
filter(!(ppm>DMSO_start & ppm<DMSO_stop)) %>%
filter(!is.na(ppm)) %>%
# remove peaks with 0 intensity, and peaks flagged as weak
filter(Intensity > 0) %>%
filter(!Flags=="Weak") %>%
# the source column has the entire path, including directories
# delete the unnecessary strings
dplyr::mutate(Source = str_replace_all(Source,"data/nmr_peaks//",""),
Source = str_replace_all(Source,".csv","")) %>%
dplyr::rename(Core = Source)
source('~/OneDrive - PNNL/Documents/GitHub/nmr_processing/2a-processing_peaks.R', echo=TRUE)
# I. LOAD FILES ----
peaks = read.csv(PROCESSED_PEAKS, stringsAsFactors = F)
corekey = read.csv(COREKEY) %>% dplyr::mutate(Core = as.character(Core))
peaks2 =
peaks %>%
left_join(corekey, by = "Core")
# I. LOAD FILES ----
peaks = read.csv(PROCESSED_PEAKS, stringsAsFactors = F)
corekey = read.csv(COREKEY)
peaks2 =
peaks %>%
left_join(corekey, by = "Core")
# II. ----
rel_abund =
subset(merge(peaks2, bins2), start <= ppm & ppm <= stop) %>%
#dplyr::select(source,ppm, Area, group) %>%
#filter(!(ppm>DMSO_start&ppm<DMSO_stop)) %>%
group_by(Core, group) %>%
dplyr::summarize(area = sum(Area)) %>%
group_by(Core) %>%
dplyr::mutate(total = sum(area),
relabund = round((area/total)*100,2))
View(rel_abund)
##relative abundance by treatment
rel_abund_trt =
rel_abund %>%
group_by(group, treatment) %>%
dplyr::summarise(rel_abund = round(mean(relabund, na.rm=TRUE),2),
se = round(sd(relabund)/sqrt(n()),2)) %>%
dplyr::mutate(relative_abundance = paste(rel_abund,"\U00B1",se))
peaks2 =
peaks %>%
left_join(corekey, by = "Core")
##relative abundance by treatment
rel_abund_trt =
rel_abund %>%
left_join(corekey, by = "Core") %>%
group_by(group,) %>%
dplyr::summarise(rel_abund = round(mean(relabund, na.rm=TRUE),2),
se = round(sd(relabund)/sqrt(n()),2)) %>%
dplyr::mutate(relative_abundance = paste(rel_abund,"\U00B1",se))
##relative abundance by treatment
rel_abund_trt =
rel_abund %>%
left_join(corekey, by = "Core") %>%
group_by(group, treatment) %>%
dplyr::summarise(rel_abund = round(mean(relabund, na.rm=TRUE),2),
se = round(sd(relabund)/sqrt(n()),2)) %>%
dplyr::mutate(relative_abundance = paste(rel_abund,"\U00B1",se))
View(rel_abund_trt)
##relative abundance by treatment
rel_abund_trt =
rel_abund %>%
dplyr::select(Core, group, relabund) %>%
spread(group, relabund)
##relative abundance by treatment
rel_abund_trt =
rel_abund %>%
dplyr::select(Core, group, relabund) %>%
spread(group, relabund) %>%
melt(-Core)
##relative abundance by treatment
rel_abund_trt =
rel_abund %>%
dplyr::select(Core, group, relabund) %>%
spread(group, relabund) %>%
gather(-Core)
##relative abundance by treatment
rel_abund_trt =
rel_abund %>%
dplyr::select(Core, group, relabund) %>%
spread(group, relabund) %>%
gather(Core)
##relative abundance by treatment
rel_abund_trt =
rel_abund %>%
dplyr::select(Core, group, relabund) %>%
spread(group, relabund) %>%
melt(Core)
##relative abundance by treatment
rel_abund_trt =
rel_abund %>%
dplyr::select(Core, group, relabund) %>%
spread(group, relabund) %>%
melt(id="Core")
##relative abundance by treatment
rel_abund_trt =
rel_abund %>%
dplyr::select(Core, group, relabund) %>%
spread(group, relabund) %>%
melt(id="Core", measure.vars = "group")
##relative abundance by treatment
rel_abund_trt =
rel_abund %>%
dplyr::select(Core, group, relabund) %>%
spread(group, relabund) %>%
melt(id="Core", variable.name = "group")
##relative abundance by treatment
rel_abund_trt =
rel_abund %>%
dplyr::select(Core, group, relabund) %>%
spread(group, relabund) %>%
melt(id="Core", variable.name = "group", value.name = "relabund")
##relative abundance by treatment
rel_abund_trt =
rel_abund %>%
dplyr::select(Core, group, relabund) %>%
spread(group, relabund) %>%
melt(id="Core", variable.name = "group", value.name = "relabund") %>%
replace(is.na(., 0))
##relative abundance by treatment
rel_abund_trt =
rel_abund %>%
dplyr::select(Core, group, relabund) %>%
spread(group, relabund) %>%
melt(id="Core", variable.name = "group", value.name = "relabund") %>%
replace(is.na(0))
##relative abundance by treatment
rel_abund_trt =
rel_abund %>%
dplyr::select(Core, group, relabund) %>%
spread(group, relabund) %>%
melt(id="Core", variable.name = "group", value.name = "relabund") %>%
replace(is.na(.), 0)
left_join(corekey, by = "Core") %>%
group_by(group, treatment) %>%
dplyr::summarise(rel_abund = round(mean(relabund, na.rm=TRUE),2),
se = round(sd(relabund)/sqrt(n()),2)) %>%
dplyr::mutate(relative_abundance = paste(rel_abund,"\U00B1",se))
View(corekey)
##relative abundance by treatment
rel_abund_trt =
rel_abund %>%
dplyr::select(Core, group, relabund) %>%
spread(group, relabund) %>%
melt(id="Core", variable.name = "group", value.name = "relabund") %>%
replace(is.na(.), 0) %>%
left_join(corekey, by = "Core") %>%
group_by(group, treatment) %>%
dplyr::summarise(rel_abund = round(mean(relabund, na.rm=TRUE),2),
se = round(sd(relabund)/sqrt(n()),2)) %>%
dplyr::mutate(relative_abundance = paste(rel_abund,"\U00B1",se))
### OUTPUT ----
write.csv(rel_abund_trt, RELABUND_TRT, row.names = FALSE)
write.csv(rel_abund, RELABUND_CORES, row.names = FALSE)
fit_aov_nmr <- function(dat) {
a <-aov(relabund ~ treatment, data = dat)
tibble(`p` = summary(a)[[1]][[1,"Pr(>F)"]])
}
nmr_aov =
rel_abund %>%
group_by(group) %>%
do(fit_aov_nmr(.)) %>%
dplyr::mutate(p = round(p,4),
asterisk = if_else(p<0.05,"*",as.character(NA)),
treatment="Wetting") %>%
dplyr::select(-p)
nmr_aov =
rel_abund %>%
group_by(group) %>%
do(fit_aov_nmr(.))
View(rel_abund)
rel_abund =
subset(merge(peaks, bins2), start <= ppm & ppm <= stop) %>%
#dplyr::select(source,ppm, Area, group) %>%
#filter(!(ppm>DMSO_start&ppm<DMSO_stop)) %>%
group_by(Core, group) %>%
dplyr::summarize(area = sum(Area)) %>%
group_by(Core) %>%
dplyr::mutate(total = sum(area),
relabund = round((area/total)*100,2)) %>%
left_join(corekey, by = "Core") %>%
group_by(group, treatment)
## relative abundance by treatment
rel_abund_trt =
rel_abund %>%
dplyr::select(Core, group, relabund) %>%
spread(group, relabund) %>%
melt(id="Core", variable.name = "group", value.name = "relabund") %>%
replace(is.na(.), 0) %>%
left_join(corekey, by = "Core") %>%
group_by(group, treatment) %>%
dplyr::summarise(rel_abund = round(mean(relabund, na.rm=TRUE),2),
se = round(sd(relabund)/sqrt(n()),2)) %>%
dplyr::mutate(relative_abundance = paste(rel_abund,"\U00B1",se))
rel_abund =
subset(merge(peaks, bins2), start <= ppm & ppm <= stop) %>%
#dplyr::select(source,ppm, Area, group) %>%
#filter(!(ppm>DMSO_start&ppm<DMSO_stop)) %>%
group_by(Core, group) %>%
dplyr::summarize(area = sum(Area)) %>%
group_by(Core) %>%
dplyr::mutate(total = sum(area),
relabund = round((area/total)*100,2)) %>%
left_join(corekey, by = "Core") %>%
group_by(group, treatment) %>%
ungroup()
## relative abundance by treatment
rel_abund_trt =
rel_abund %>%
dplyr::select(Core, group, relabund) %>%
spread(group, relabund) %>%
melt(id="Core", variable.name = "group", value.name = "relabund") %>%
replace(is.na(.), 0) %>%
left_join(corekey, by = "Core") %>%
group_by(group, treatment) %>%
dplyr::summarise(rel_abund = round(mean(relabund, na.rm=TRUE),2),
se = round(sd(relabund)/sqrt(n()),2)) %>%
dplyr::mutate(relative_abundance = paste(rel_abund,"\U00B1",se))
nmr_aov =
rel_abund %>%
group_by(group) %>%
do(fit_aov_nmr(.)) %>%
dplyr::mutate(p = round(p,4),
asterisk = if_else(p<0.05,"*",as.character(NA)),
treatment="Wetting") %>%
dplyr::select(-p)
rel_abund =
subset(merge(peaks, bins2), start <= ppm & ppm <= stop) %>%
#dplyr::select(source,ppm, Area, group) %>%
#filter(!(ppm>DMSO_start&ppm<DMSO_stop)) %>%
group_by(Core, group) %>%
dplyr::summarize(area = sum(Area)) %>%
group_by(Core) %>%
dplyr::mutate(total = sum(area),
relabund = round((area/total)*100,2)) %>%
dplyr::select(Core, group, relabund) %>%
spread(group, relabund) %>%
melt(id="Core", variable.name = "group", value.name = "relabund") %>%
replace(is.na(.), 0) %>%
left_join(corekey, by = "Core") %>%
ungroup()
## relative abundance by treatment
rel_abund_trt =
rel_abund %>%
group_by(group, treatment) %>%
dplyr::summarise(rel_abund = round(mean(relabund, na.rm=TRUE),2),
se = round(sd(relabund)/sqrt(n()),2)) %>%
dplyr::mutate(relative_abundance = paste(rel_abund,"\U00B1",se))
fit_aov_nmr <- function(dat) {
a <-aov(relabund ~ treatment, data = dat)
tibble(`p` = summary(a)[[1]][[1,"Pr(>F)"]])
}
nmr_aov =
rel_abund %>%
group_by(group) %>%
do(fit_aov_nmr(.)) %>%
dplyr::mutate(p = round(p,4),
asterisk = if_else(p<0.05,"*",as.character(NA)),
treatment="Wetting") %>%
dplyr::select(-p)
View(nmr_aov)
nmr_summary =
rel_abund_trt %>%
left_join(nmr_aov, by = c("treatment","group")) %>%
dplyr::mutate(
relabund = paste(relative_abundance, asterisk))
View(nmr_summary)
nmr_aov =
rel_abund %>%
group_by(group) %>%
do(fit_aov_nmr(.)) %>%
dplyr::mutate(p = round(p,4),
asterisk = if_else(p<0.05,"*",as.character(NA))) %>%
dplyr::select(-p)
View(rel_abund_trt)
nmr_summary =
rel_abund_trt %>%
dplyr::select(group, treatment, relative_abundance) %>%
spread(treatment, relative_abundance) %>%
left_join(nmr_aov, by = c("group")) %>%
dplyr::mutate(
relabund = paste(relative_abundance, asterisk))
nmr_summary =
rel_abund_trt %>%
dplyr::select(group, treatment, relative_abundance) %>%
spread(treatment, relative_abundance)
nmr_summary =
rel_abund_trt %>%
dplyr::select(group, treatment, relative_abundance) %>%
spread(treatment, relative_abundance) %>%
left_join(nmr_aov, by = c("group")) %>%
dplyr::mutate(
relabund = paste(wetting, asterisk))
nmr_summary =
rel_abund_trt %>%
dplyr::select(group, treatment, relative_abundance) %>%
spread(treatment, relative_abundance) %>%
left_join(nmr_aov, by = c("group")) %>%
dplyr::mutate(
relabund = paste(Wetting, asterisk))
nmr_summary =
rel_abund_trt %>%
dplyr::select(group, treatment, relative_abundance) %>%
spread(treatment, relative_abundance) %>%
left_join(nmr_aov, by = c("group")) %>%
dplyr::mutate(
Wetting = paste(Wetting, asterisk))
rel_abund_summary =
rel_abund_trt %>%
dplyr::select(group, treatment, relative_abundance) %>%
spread(treatment, relative_abundance) %>%
left_join(nmr_aov, by = c("group")) %>%
dplyr::mutate(
Wetting = paste(Wetting, asterisk))
source('~/OneDrive - PNNL/Documents/GitHub/nmr_processing/2b-relabund.R', echo=TRUE)
View(rel_abund_summary)
